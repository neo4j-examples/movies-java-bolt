name: Java

on:
  push:
    branches: [ 'main' ]
  pull_request:
    branches: [ '**' ]
  repository_dispatch:
    types: [ 'movie-harness-change' ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: temurin
    - name: Cache local Maven repository
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Build with Maven
      run: mvn --show-version --batch-mode package --file pom.xml


  e2e:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 18.x ]
        neo4j-version: [ "4.4", "4.4-enterprise", "5", "5-enterprise" ]
    services:
      neo4j:
        image: neo4j:${{ matrix.neo4j-version }}
        ports: [ "7687:7687" ]
        env:
          NEO4J_ACCEPT_LICENSE_AGREEMENT: yes
          NEO4J_AUTH: "neo4j/neo4jpass"
        options: >-
          --name neo4j-e2e
          --health-cmd "cypher-shell -u neo4j -p neo4jpass 'RETURN 1'"
          --health-interval 10s
          --health-timeout 5s
          --health-start-period 10s
          --health-retries 5
          --volume /tmp:/movies
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin
      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Download dataset
        run: curl --fail --output /tmp/movies.cypher https://raw.githubusercontent.com/neo4j-graph-examples/movies/fb0e497e9e6a601fb55403586dd510aca73e471f/scripts/movies.cypher
      - name: Import dataset
        run: docker exec --interactive neo4j-e2e cypher-shell -u neo4j -p neo4jpass --file /movies/movies.cypher
      - name: Check out project sources
        uses: actions/checkout@v3
      - name: Create application binary
        run: mvn --batch-mode package -DskipTests
      - name: Check out test harness sources
        uses: actions/checkout@v3
        with:
          repository: neo4j-examples/movies-harness
          path: e2e
          ref: ${{ github.event.client_payload.sha }}
      - uses: cypress-io/github-action@v5
        env:
          NEO4J_VERSION: ${{ matrix.neo4j-version }}
          NEO4J_URI: bolt://localhost
          NEO4J_DATABASE: "neo4j"
          NEO4J_USER: neo4j
          NEO4J_PASSWORD: neo4jpass
          DEBUG: '@cypress/github-action'
        with:
          working-directory: e2e
          browser: chrome
          # sh is needed because of https://github.com/cypress-io/github-action/issues/482
          start: sh ../target/bin/webapp